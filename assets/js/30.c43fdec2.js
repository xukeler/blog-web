(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{569:function(s,t,e){"use strict";e.r(t);var a=e(31),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"electron协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#electron协议"}},[s._v("#")]),s._v(" electron协议")]),s._v(" "),e("ul",[e("li",[s._v("我们经常会看到在"),e("code",[s._v("web")]),s._v("浏览器点击某个按钮就能够打开本地安装的客户端程序，例如"),e("code",[s._v("qq sina微博")]),s._v("等其它程序，这种方式是通过一个协议打开的，这个协议会注入到系统的注册表里，有可能会被拦截，被拦截就检查是否安装"),e("code",[s._v("360")]),s._v("等桌面垃圾软件，如果安装了，先退出，再运行。")]),s._v(" "),e("li",[e("code",[s._v("electron")]),s._v("的协议是在程序第一次打开的时候才会写入注册表里，一次没有启动过，是唤不醒的。必须要打开一次。")])]),s._v(" "),e("h3",{attrs:{id:"注册协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册协议"}},[s._v("#")]),s._v(" 注册协议")]),s._v(" "),e("ul",[e("li",[s._v("注册协议在主进程"),e("code",[s._v("index.js")]),s._v("，通过"),e("code",[s._v("app")]),s._v("模块的"),e("code",[s._v("setAsDefaultProtocolClient")]),s._v("来注册协议，注册后的协议通过"),e("code",[s._v("协议名称://startapp/here")]),s._v("在"),e("code",[s._v("web")]),s._v("程序通过")]),s._v(" "),e("li",[e("code",[s._v("app")]),s._v("模块控制应用程序的事件生命周期，里面包含生命周期的属性和方法，具体参考官方文档。\n"),e("ul",[e("li",[e("code",[s._v("will-finish-launching")]),s._v(" 在应用完成基本启动进程之后触发。")]),s._v(" "),e("li",[e("code",[s._v("ready")]),s._v(" 当"),e("code",[s._v("electron")]),s._v("完成初始化后触发。")]),s._v(" "),e("li",[e("code",[s._v("window-all-closed")]),s._v(" 所有窗口都关闭的时候触发，在"),e("code",[s._v("windows")]),s._v("和"),e("code",[s._v("linux")]),s._v("里，所有窗口都退出的时候通常是应用退出的时候。")]),s._v(" "),e("li",[e("code",[s._v("before-quit")]),s._v(" 退出应用之前的时候触发。")]),s._v(" "),e("li",[e("code",[s._v("will-quit")]),s._v(" 即将退出应用的时候触发。")]),s._v(" "),e("li",[e("code",[s._v("quit")]),s._v(" 应用退出的时候触发。")])])]),s._v(" "),e("li",[e("code",[s._v("web")]),s._v("调用协议通过"),e("code",[s._v('window.location.href="file-assistant://startapp/here";')]),s._v("调用。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注册一个file-assistant协议")]),s._v("\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAsDefaultProtocolClient")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file-assistant"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//完整的协议名称")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//file-assistant://startapp/here")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"删除协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除协议"}},[s._v("#")]),s._v(" 删除协议")]),s._v(" "),e("ul",[e("li",[s._v("注册的协议也是可以删除的，通app.过"),e("code",[s._v("app.removeAsDefaultProtocolClient('name')")]),s._v("来删除协议，一般监听程序卸载，在卸载的时候删除协议。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeAsDefaultProtocolClient")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file-assistant"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"获取协议里的参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取协议里的参数"}},[s._v("#")]),s._v(" 获取协议里的参数")]),s._v(" "),e("ul",[e("li",[s._v("一般"),e("code",[s._v("web")]),s._v("唤醒客户端的协议都是带着参树的，根据参数的不同，执行不同的操作。")]),s._v(" "),e("li",[s._v("参数直接在协议的后面加个"),e("code",[s._v("?")]),s._v("号和"),e("code",[s._v("get")]),s._v("请求一样拼接参数就可以。")]),s._v(" "),e("li",[s._v("获取参数是通过"),e("code",[s._v("process.argv")]),s._v("，返回一个数组有两个数据，一个是程序的路径，一个是完整的拼接参数的协议，然后截取字符串就能获取参数。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("file-assistant://startapp/here?name=123&count=1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);