(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{634:function(t,a,e){"use strict";e.r(a);var s=e(31),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"git是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git是什么？"}},[t._v("#")]),t._v(" Git是什么？")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Git")]),t._v("是目前世界上最先进的分布式版本控制系统（没有之一）。")])]),t._v(" "),e("h3",{attrs:{id:"什么是分布式版本控制系统？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式版本控制系统？"}},[t._v("#")]),t._v(" 什么是分布式版本控制系统？")]),t._v(" "),e("p",[t._v("项目的完整代码库（包括其完整版本历史）将被复制到每个开发人员的计算机，在不同计算机之间跟踪对文件的更改，例如我的工作站和你的工作站。这需要特定的协调策略来保持项目的一致性，以便所有开发人员都可以在任何时间点跟踪文件的改变情况。")]),t._v(" "),e("h3",{attrs:{id:"分布式版本控制系统有以下优点："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式版本控制系统有以下优点："}},[t._v("#")]),t._v(" 分布式版本控制系统有以下优点：")]),t._v(" "),e("ul",[e("li",[t._v("可以自动且快速建立分支与合并分支")]),t._v(" "),e("li",[t._v("开发人员可以脱机工作")]),t._v(" "),e("li",[t._v("软件的多个副本消除了对单副本的依赖性")])]),t._v(" "),e("h3",{attrs:{id:"安装git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装git"}},[t._v("#")]),t._v(" 安装Git")]),t._v(" "),e("ul",[e("li",[t._v("要使用Git第一步要先安装Git，可以从Git官网直接下载安装"),e("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/downloads"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("安装之后鼠标右击会出现"),e("code",[t._v("GitGUIHere和GitBashHere")]),t._v("，说明安装成功。")])]),t._v(" "),e("p",[t._v("然后我们需要设置一下用户名和用户邮箱。通过"),e("code",[t._v("Git Bash Here")]),t._v("命令行窗口设置，输入命令。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ git config --global user.name "Your Name"\n$ git config --global user.email "email@example.com"\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"创建版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[t._v("#")]),t._v(" 创建版本库")]),t._v(" "),e("p",[t._v("首先要在一个空的目录中打开"),e("code",[t._v("Git Bash Here")]),t._v("命令行窗口，使用"),e("code",[t._v("git init")]),t._v("把这个目录变成Git可以管理的仓库。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git init\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("然后目录中会出现一个"),e("code",[t._v(".git")]),t._v("文件（默认隐藏），这个目录是Git来跟踪管理版本库的")]),t._v(" "),e("h3",{attrs:{id:"把文件添加到版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把文件添加到版本库"}},[t._v("#")]),t._v(" 把文件添加到版本库")]),t._v(" "),e("p",[t._v("在目录中创建文件，或者copy文件到目录，用命令"),e("code",[t._v("git add")]),t._v("把文件添加到暂存区，"),e("code",[t._v("-u")]),t._v("所有跟踪文件中被修改过或已删除文件的信息添加到索引库。它不会处理那些不被跟踪的文件。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git add -u\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("用命令"),e("code",[t._v("git commit")]),t._v("告诉，把文件提交到仓库，"),e("code",[t._v("-m")]),t._v("后面输入的是本次提交的说明，可以输入任意内容。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git commit -m  '注释'\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"git常用指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用指令"}},[t._v("#")]),t._v(" Git常用指令")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git status")]),t._v("输出仓库当前的状态,提示哪些文件被修改，或者还没有提交到仓库。")]),t._v(" "),e("li",[e("code",[t._v("git diff")]),t._v("查看修改的内容。")]),t._v(" "),e("li",[e("code",[t._v("git log")]),t._v("显示从最近到最远的提交日志。")]),t._v(" "),e("li",[e("code",[t._v("git reset --hard HEAD^")]),t._v("版本回退，一个^代表一个版本，简化写使用数字回退指定版本。或者使用版本号回退，版本号不一定要写全。")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --hard HEAD^//回退上个版本\ngit reset --hard HEAD^^回退上上个版本\ngit reset --hard HEAD~100指定版本\ngit reset --hard 1094a\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git checkout -- file（文件名带后缀）")]),t._v("撤销修改，在工作区的修改全部撤销，一定要加"),e("code",[t._v("--")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("git rm test.txt")]),t._v("(文件名)``删除指定文件。")])]),t._v(" "),e("h3",{attrs:{id:"连接远程仓库github"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接远程仓库github"}},[t._v("#")]),t._v(" 连接远程仓库Github")]),t._v(" "),e("ul",[e("li",[t._v("连接Github首要要创建SSH Key，通过命令行窗口输入指令。")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ ssh-keygen -t rsa -C "youremail@example.com"\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("然后在在c盘的user目录下有一个"),e("code",[t._v(".ssh")]),t._v("文件夹，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥。")]),t._v(" "),e("li",[t._v("然后登陆Github，在设置里面点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容。")])]),t._v(" "),e("h3",{attrs:{id:"关联远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联远程仓库"}},[t._v("#")]),t._v(" 关联远程仓库")]),t._v(" "),e("ul",[e("li",[t._v("根据GitHub的提示在本地的"),e("code",[t._v("Git Bash Here")]),t._v("命令行窗口，输入指令。")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git remote add origin git@github.com:xukeler/test.git\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"推送到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送到远程仓库"}},[t._v("#")]),t._v(" 推送到远程仓库")]),t._v(" "),e("p",[t._v("本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git push -u origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"克隆远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#克隆远程仓库"}},[t._v("#")]),t._v(" 克隆远程仓库")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git clone '仓库地址'\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"创建切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建切换分支"}},[t._v("#")]),t._v(" 创建切换分支")]),t._v(" "),e("ul",[e("li",[t._v("查看分支"),e("code",[t._v("git branch")]),t._v(",创建分支"),e("code",[t._v("git branch 分支名")]),t._v("，切换分支"),e("code",[t._v("git checkout")]),t._v("。"),e("code",[t._v("git checkout -b dev")]),t._v("命令加上-b参数表示创建并切换，相当于以下两条命令")]),t._v(" "),e("li",[e("code",[t._v("git switch 分支名")]),t._v("也可以切换")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git checkout -b dev\n$ git branch dev\n$ git checkout dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git merge")]),t._v("用于合并指定分支到当前分支。")]),t._v(" "),e("li",[t._v("切换要目标分支"),e("code",[t._v("git pull origin 分支名")]),t._v("即可合并。")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git merge dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),e("p",[e("code",[t._v("git branch -d 分支名")]),t._v("删除分支。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git branch -d <name>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"解决冲突"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[t._v("#")]),t._v(" 解决冲突")]),t._v(" "),e("ul",[e("li",[t._v("联合开发时，在推送自己的修改需要先拉取最新的提交"),e("code",[t._v("git pull")]),t._v("，然后在推送，如果有冲突手动修改。")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("git pull")]),t._v("发现有冲突，但是本地已经有修改，可以先"),e("code",[t._v("git stash")]),t._v(" 暂存，然后在"),e("code",[t._v("git pull")]),t._v(","),e("code",[t._v("git stash pop")]),t._v("，再解决冲突。")])])])}),[],!1,null,null,null);a.default=i.exports}}]);